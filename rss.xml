<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Oops.🖥</title><link>https://oops.computer/</link><description>MemE is a powerful and highly customizable GoHugo theme for personal blogs.</description><generator>Hugo 0.85.0 https://gohugo.io/</generator><language>en</language><managingEditor>guillaume@binaryfactory.ca (Guillaume Ross)</managingEditor><webMaster>guillaume@binaryfactory.ca (Guillaume Ross)</webMaster><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><lastBuildDate>Sat, 13 Nov 2021 18:27:06 +0000</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="https://oops.computer/rss.xml"/><item><title>Automating GitHub</title><link>https://oops.computer/posts/github_automation/</link><guid isPermaLink="true">https://oops.computer/posts/github_automation/</guid><pubDate>Sat, 13 Nov 2021 13:23:54 -0400</pubDate><author>guillaume@binaryfactory.ca (Guillaume Ross)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><description>&lt;p>In &lt;a href="safer-github-setup.md">Safer GitHub Setup&lt;/a>, we restricted access to multiple operations in GitHub:&lt;/p>
&lt;ul>
&lt;li>Creating users can be done by owners, and we have few of those.&lt;/li>
&lt;li>Managing teams also requires owners privileges.&lt;/li>
&lt;li>Creating repositories is impossible for regular users.&lt;/li>
&lt;/ul>
&lt;p>This is where the &lt;a href="https://registry.terraform.io/providers/integrations/github/latest/docs">GitHub Terraform Provider&lt;/a> comes in.&lt;/p>
&lt;p>Using this provider, you can:&lt;/p>
&lt;ul>
&lt;li>Create repositories
&lt;ul>
&lt;li>Configure branch protection on those repositories&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Invite users&lt;/li>
&lt;li>Manage teams&lt;/li>
&lt;li>And much more&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>By putting configuration files for this in a GitHub repo with the proper branch protection, now, everyone in your organization can invite new users, request changes to teams, and create repositories.&lt;/p>
&lt;h2 id="service-account">Service Account&lt;/h2>
&lt;p>Automation requires service accounts. GitHub does not have the concept of a &amp;ldquo;service&amp;rdquo; account. All users are worldwide, and should represent people.&lt;/p>
&lt;p>To ensure your automation does not depend on a specific person, you must create a service account of some kind.&lt;/p>
&lt;ol>
&lt;li>Create an email address for this purpose on your email provider (&lt;em>github-automation@your_org.pancakes&lt;/em>)&lt;/li>
&lt;li>Create a GitHub account for it. Save the password in a password manager.&lt;/li>
&lt;li>If you are using Single Sign-On (SSO), and requiring it, grant permission to this account to log in to your organization via SAML.&lt;/li>
&lt;li>Create a &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token">Personal Access Token (PAT)&lt;/a> for this service account.&lt;/li>
&lt;li>Add an email address to the GitHub account that will go to a mailing list you will receive.&lt;/li>
&lt;li>Disable SAML access and remove any email license you granted this service account. We don&amp;rsquo;t want it to be used interactively in the future anyway, so why pay for it to receive email?&lt;/li>
&lt;/ol>
&lt;h2 id="recommended-branch-protection">Recommended Branch Protection&lt;/h2>
&lt;p>For a critical repository that allows modifying teams, users and repositories, it is important for someone in your security team, or any other team responsible for security , to approve the changes. Therefore, your GitHub configuration repository should:&lt;/p>
&lt;ul>
&lt;li>Require 2 code reviews&lt;/li>
&lt;li>Have &lt;a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners">CODEOWNERs&lt;/a> configured&lt;/li>
&lt;li>Have branch protection apply to administrators&lt;/li>
&lt;li>Require commit signing&lt;/li>
&lt;/ul>
&lt;pre>&lt;code># Require review from Security Team for all changes
* @yourorg/security
&lt;/code>&lt;/pre>&lt;h2 id="process">Process&lt;/h2>
&lt;div class="mermaid">
graph LR;
id1(User)
id3[(github-config-repo/feature-branch)]
id4[(github-config-repo/main)]
id2{Is Approved?}
id5(Build Pipeline)
id6(Terraform)
id7(GitHub APIs)
id8(GitHub Users)
id9(GitHub Teams)
id10(GitHub Repositories)
id11(Code Owners)
id12(Branch Protection)
id1--Changes Configuration-->id3
id3--PR-->id11
id11-->id2
id2--No-->id1
id2--Yes-->id4
id4--Build Trigger-->id5
id5--Runs-->id6
id6--Executes and applies-->id7
id7-->id8
id7-->id9
id7-->id10-->id12
&lt;/div></description><category domain="https://oops.computer/categories/secure-startup/">Secure Startup</category></item><item><title>Buying your first domain</title><link>https://oops.computer/posts/buying_domain/</link><guid isPermaLink="true">https://oops.computer/posts/buying_domain/</guid><pubDate>Mon, 01 Nov 2021 12:23:54 -0400</pubDate><author>guillaume@binaryfactory.ca (Guillaume Ross)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><description>&lt;h1 id="tldr">TLDR&lt;/h1>
&lt;p>Buy a domain on a trusted top-level domain, using an email with multi-factor authentication (MFA). On the registrar and domain, enable MFA, turn on transfer lock and domain privacy on the domain until you get corporate mailing and email addresses.&lt;/p>
&lt;h1 id="buying-your-first-domain">Buying your first domain&lt;/h1>
&lt;p>As a brand new company, you&amp;rsquo;re going to need a domain name rapidly. This domain name will quickly be used for your website, email, and generic &amp;ldquo;proof of existence&amp;rdquo;.&lt;/p>
&lt;p>It&amp;rsquo;ll become the root for the identity related to your company. The faster you create it, the sooner it will stop looking suspicious, as many systems treat &lt;a href="https://unit42.paloaltonetworks.com/newly-registered-domains-malicious-abuse-by-bad-actors/">newly registered domains&lt;/a> (NRDs) as suspicious.&lt;/p>
&lt;p>Why would you need a website rapidly, if you have nothing ready to sell yet? Many services require being linked to a domain. For example, to get onboarded to Apple&amp;rsquo;s Device Enrolment Program, which lets you drop-ship laptops to employees directly from Apple but ready to go with your configuration, you need to have an HTTPS website. To get a certificate, you must be able to prove you control a domain. Therefore, there&amp;rsquo;s no time to waste, you should get your domain as fast as possible when starting a new company.&lt;/p>
&lt;h2 id="picking-a-domain-name">Picking a domain name&lt;/h2>
&lt;ol>
&lt;li>Ensure your company name and the domain you want to buy are available and legally appropriate. I am not a lawyer and don&amp;rsquo;t pretend to be one on the Internet, but I recommend using real ones. You probably also want input from a marketing firm that&amp;rsquo;ll help you pick a name while avoiding mistakes that are only &lt;a href="https://drivetribe.com/p/15-of-the-worst-car-names-ever-Uuj3c_VxR7aCu-WkDCeahg?iid=aY9QSRXETP-k1K0_G7G05w">hilarious&lt;/a> when they happen to others.&lt;/li>
&lt;li>Avoid &amp;ldquo;weird&amp;rdquo; &lt;a href="https://www.zdnet.com/article/new-top-level-domains-a-money-grab-and-a-mistake-paul-vixie/">top-level domains&lt;/a>. You do not want your company to depend on a small country&amp;rsquo;s control of a TLD, and you definitely don&amp;rsquo;t want it to use a domain name known for being used for &lt;a href="https://www.farsightsecurity.com/assets/media/download/VB2018-study.pdf">a lot of malicious activity&lt;/a>. Pick an old favorite such as .com, even if it means not getting the perfect short name (you can get the weird TLD ones as well, but make your primary the &amp;ldquo;good&amp;rdquo; one.)&lt;/li>
&lt;/ol>
&lt;h2 id="buying-the-domain-name">Buying the domain name&lt;/h2>
&lt;p>Once you’ve picked your domain, you need to buy it. If you’re a startup, you don’t have any infrastructure yet, and probably have to rely on personal email accounts to get things started.&lt;/p>
&lt;ol start="0">
&lt;li>Ensure you have Multi-Factor Authentication enabled on your account, ideally, using a method that is not SMS or voice based. Your email account will be used to buy the domain, and until you have corporate email set up, could turn out to be the weakest link towards attacking your new company. It must be as safe as possible.&lt;/li>
&lt;li>Pick a registrar that supports Multi-Factor Authentication. Many do by now, though &lt;a href="https://www.hover.com">some&lt;/a> don’t &lt;a href="https://science.time.com/2011/04/04/godaddy-ceo-on-shooting-an-elephant-im-not-sorry/">murder elephants&lt;/a>, and enable MFA as fast as possible.&lt;/li>
&lt;li>Buy the domain for multiple years. You want to be sure you have time to move to a more corporate type account by the time it gets renewed.&lt;/li>
&lt;li>Configure &lt;a href="https://en.wikipedia.org/wiki/Domain_privacy">domain privacy&lt;/a>. While it looks shady for a company to hide details from &lt;a href="https://en.wikipedia.org/wiki/WHOIS">WHOIS&lt;/a>, you don’t want to share your information until you have a real corporate address and email account.&lt;/li>
&lt;li>Configure the &lt;a href="https://www.icann.org/resources/pages/locked-2013-05-03-en">Registrar Lock&lt;/a>. This will ensure your domain can’t easily be transferred to another registrar out of your control.&lt;/li>
&lt;li>Follow the same process to buy your domain names on other common TLDs (&lt;code>.net&lt;/code>, &lt;code>org&lt;/code>, your country&amp;rsquo;s).&lt;/li>
&lt;/ol>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;p>Once you’ve configured corporate email (post on that coming soon!), you’ll need to go back and edit your domain.&lt;/p>
&lt;ol>
&lt;li>If the cloud provider you’re using has a &lt;a href="https://cloud.google.com/domains/docs/overview">cloud registrar&lt;/a>, prepare to move your domain(s) there. Keep in mind it’s not always possible to move recently purchased domains, sometimes requiring a period of 60 days to go by before moving them. &lt;strong>Set a reminder&lt;/strong>. Why use a cloud provider’s registrar? You’re going to spend a lot of time controlling access to cloud resources, making domains a part of that is a good way to re-use future work.&lt;/li>
&lt;li>No matter what, make sure that logging in to your registrar as well as any &amp;ldquo;recovery option&amp;rdquo; is configured to use company emails by this point, not personal ones.&lt;/li>
&lt;li>Change the contact information on the domain to a generic group on your new corporate email environment, pointing to at least two people. You wouldn’t want an important notice related to your domain to be missed due to vacation.&lt;/li>
&lt;li>Once you have a mailing address, disable domain privacy, as it looks suspicious for a company to be using that.&lt;/li>
&lt;/ol></description><category domain="https://oops.computer/categories/secure-startup/">Secure Startup</category></item><item><title>Safer GitHub Setup</title><link>https://oops.computer/posts/safer-github-setup/</link><guid isPermaLink="true">https://oops.computer/posts/safer-github-setup/</guid><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>guillaume@binaryfactory.ca (Guillaume Ross)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><description>&lt;p>As a tech company, you&amp;rsquo;re going to need to host and version control your source code. Unless you&amp;rsquo;re super weird (or have crazy requirements), you&amp;rsquo;re likely to use a SaaS platform such as GitHub to do so.&lt;/p>
&lt;p>This article covers the main controls to implement on GitHub - but you&amp;rsquo;ll find that most of these have equivalents on platforms such as &lt;a href="https://about.gitlab.com/">GitLab&lt;/a> or &lt;a href="https://bitbucket.org/product">BitBucket&lt;/a>.&lt;/p>
&lt;p>This guide is meant for companies new to using GitHub, but the recommendations can be used for any organization using it.&lt;/p>
&lt;h3 id="legend">Legend&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Description&lt;/th>
&lt;th>Label&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Everyone should do this&lt;/td>
&lt;td>🍩&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Slight need for increased security&lt;/td>
&lt;td>🌯&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>For those that will operate infra supporting systems that are critical&lt;/td>
&lt;td>🌶&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Recommendations that require the Enterprise version&lt;/td>
&lt;td>💰&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="authentication">Authentication&lt;/h2>
&lt;p>Authentication is the lynchpin of security on SaaS applications such as GitHub.&lt;/p>
&lt;p>GitHub authentication differs to many SaaS products in one important way: accounts are global. Developers can and do carry their accounts from company to company and use them for open source projects.&lt;/p>
&lt;h3 id="require-two-factor-authentication-for-everyone-in-the-organization-">Require two-factor authentication for everyone in the organization 🍩&lt;/h3>
&lt;p>&lt;img src="./images/safer-github-setup/github_2fa.png" alt="2FA Checkbox to Check ✅">&lt;/p>
&lt;p>The first thing you should do to your new GitHub organization is to enable two-factor authentication. Even if you plan to use Single Sign-On (SSO) with an identity provider that requires SSO, that will protect access to your organization, but 2FA is needed to protect the user account itself.&lt;/p>
&lt;h3 id="single-sign-on-sso-">Single Sign-On (SSO) 🌯💰&lt;/h3>
&lt;p>A question I hear frequently when companies are setting up their GitHub is&lt;/p>
&lt;blockquote>
&lt;p>Should we ask our employees to create new, work GitHub accounts?&lt;/p>
&lt;/blockquote>
&lt;p>The answer to that is almost always &lt;strong>no&lt;/strong>, due to a simple feature. If the goal is to make sure data does not get leaked to personal GitHub accounts, it is much easier to &lt;strong>use SSO authentication&lt;/strong> for access to the organization, and require an email &lt;strong>on your corporate domain&lt;/strong> for notifications related to your projects.&lt;/p>
&lt;div class="mermaid">
graph LR;
id1(User)
id2(GitHub)
id3(Organization)
id4(SAML)
id5(Personal email)
id6(Work email)
id7(Personal Projects)
id3--notification-->id6
id7--notification-->id5
id1--Logs In with Account-->id2
id2-->Accesses-->id7
id2--Links to work account-->id4
id4--Accesses-->id3
&lt;/div>
&lt;p>That way, your corporate GitHub notifications are accessible on work email, and GitHub sessions themselves, with SAML.&lt;/p>
&lt;p>The main downside of leveraging SSO on GitHub is that the price jumps from $4 per user/month to &lt;strong>$21&lt;/strong>. They&amp;rsquo;re not going to give up their ranking on &lt;a href="https://sso.tax/">sso.tax&lt;/a> soon.&lt;/p>
&lt;ol start="0">
&lt;li>Go to the &lt;em>Organization Security&lt;/em> settings page.&lt;/li>
&lt;li>Enable SSO &lt;img src="./images/safer-github-setup/enablesso.png" alt="Enable SSO to check ✅">&lt;/li>
&lt;li>Require SSO &lt;img src="./images/safer-github-setup/requiresso.png" alt="Require SSO to check ✅">&lt;/li>
&lt;li>Go to the &lt;em>Verified &amp;amp; approved domains&lt;/em> settings page&lt;/li>
&lt;li>Verify your domain(s)&lt;/li>
&lt;li>Require that email notifications only be sent to approved or verified domains. &lt;img src="./images/safer-github-setup/restrictemail.png" alt="Restrict email notifications check ✅">&lt;/li>
&lt;/ol>
&lt;h3 id="administratorowner-privileges-">Administrator/Owner Privileges 🌯&lt;/h3>
&lt;p>Keep administrator privileges to the absolute minimum. Keep in mind that anybody with owner privileges on your GitHub environment would be able to disable all the security controls discussed in this document - without being detected, unless you were using the &lt;a href="https://docs.github.com/en/organizations/keeping-your-organization-secure/reviewing-the-audit-log-for-your-organization">Audit API&lt;/a> with automated detection.&lt;/p>
&lt;p>Make sure two people are able to get to owner privileges, but no more. As you increase your security and consider becoming compliant with various frameworks, you might even have to restrict that even more, by splitting passwords and 2FA credentials between different people.&lt;/p>
&lt;h2 id="repositories">Repositories&lt;/h2>
&lt;p>Repositories are the main reason organizations use GitHub. If you&amp;rsquo;re not going to create them, why bother?&lt;/p>
&lt;p>There are many ways to protect repositories and the code they contain. This requires controlling who is able to create and configure the repositories, then, to have a standard configuration applied to them.&lt;/p>
&lt;h3 id="member-repository-permissions-">Member Repository Permissions 🌯&lt;/h3>
&lt;p>To keep control on the configuration of repositories, you must ensure GitHub owners are the only ones able to create them.&lt;/p>
&lt;h3 id="repository-creation-">Repository Creation 🌯&lt;/h3>
&lt;p>Under &lt;em>‌Member repository permissions&lt;/em>, make sure you uncheck permissions for the creation of public and private repositories.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/repo_creation.png" alt="Repo creation permissions to uncheck!">&lt;/p>
&lt;blockquote>
&lt;p>But what if I need people to be able to create repositories? I don&amp;rsquo;t want to slow them down!&lt;/p>
&lt;/blockquote>
&lt;p>That&amp;rsquo;s what &lt;a href="github_automation.md">automation&lt;/a> is for!&lt;/p>
&lt;h3 id="repository-forking-">Repository forking 🍩&lt;/h3>
&lt;p>By default, ensure public repositories are the only one that can be forked, by disabling this feature.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/repo_forking.png" alt="Repo forking to uncheck!">&lt;/p>
&lt;h3 id="repository-outside-collaborators-">Repository Outside collaborators 🌯&lt;/h3>
&lt;p>If you are using SAML, and are using that to enforce specific requirements on systems connecting to GitHub, you may want to enforce that outside collaborators not be allowed. Instead, invite consultants as regular users, but give them an account on your identity provider.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/outside_collaborators.png" alt="Outside collaborators to uncheck!">&lt;/p>
&lt;p>If you must collaborate with a lot of external consultants, and you do not apply specific security requirements to connecting to GitHub, then leaving this setting enabled makes sense.&lt;/p>
&lt;h3 id="branch-protection-">Branch Protection 🍩&lt;/h3>
&lt;p>Branch protection is one of the most important settings to configure, and the main reason you should not have members with administrative privileges on the repositories.&lt;/p>
&lt;p>Located in the &lt;strong>Branches&lt;/strong> section of repository settings, you must create branch.&lt;/p>
&lt;p>First, ensure branch protection is enabled on at least your default branch.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/branch_protection_1.png" alt="Enable branch protection on your default branch">&lt;/p>
&lt;h4 id="branch-protection-settings">Branch Protection Settings&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>For&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Require a pull request before merging&lt;/td>
&lt;td>✅&lt;/td>
&lt;td>🍩&lt;/td>
&lt;td>Enforce code reviews&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Require approvals&lt;/td>
&lt;td>1️⃣&lt;/td>
&lt;td>🍩&lt;/td>
&lt;td>Require at least 1 approval&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Require approvals&lt;/td>
&lt;td>2️⃣&lt;/td>
&lt;td>🌶&lt;/td>
&lt;td>Require at least 2 approvals&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dismiss stale pull request approvals when new commits are pushed&lt;/td>
&lt;td>✅&lt;/td>
&lt;td>🍩&lt;/td>
&lt;td>Invalidated existing approvals when changing code&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Require review from Code Owners&lt;/td>
&lt;td>✅&lt;/td>
&lt;td>🍩&lt;/td>
&lt;td>Require reviews from specific users or teams in CODEOWNERS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Require signed commits&lt;/td>
&lt;td>✅&lt;/td>
&lt;td>🌶&lt;/td>
&lt;td>Require GPG signing of commits&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Include administrators&lt;/td>
&lt;td>✅&lt;/td>
&lt;td>🍩&lt;/td>
&lt;td>Apply rule to repository administrators and GitHub owners&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Allow force pushes&lt;/td>
&lt;td>⛔️&lt;/td>
&lt;td>🍩&lt;/td>
&lt;td>Self-explanatory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Allow deletions&lt;/td>
&lt;td>⛔️&lt;/td>
&lt;td>🍩&lt;/td>
&lt;td>Self-explanatory&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Other values should be configured based on your use cases.&lt;/p>
&lt;h2 id="other-settings">Other Settings&lt;/h2>
&lt;h3 id="pages-">Pages 🌯&lt;/h3>
&lt;p>Ensure that regular members do not have the ability to create public pages, but can create private ones. This can prevent the accidental publishing of internal documentation.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/pages.png" alt="Public pages to uncheck!">&lt;/p>
&lt;h3 id="admin-repository-permissions">Admin Repository Permissions&lt;/h3>
&lt;p>These permissions apply to members that have admin privileges on repositories.&lt;/p>
&lt;p>It is important to limit admin privileges on repositories. These privileges are simply too high to grant to multiple people, as they allow disabling security features such as branch protection. Therefore, it is important to strive for repositories without administrators, except for service accounts used for &lt;a href="github_automation.md">automation&lt;/a>.&lt;/p>
&lt;p>That being said, these automation accounts might be attacked, and so, it is useful to limit the privileges being made available to those accounts.&lt;/p>
&lt;h4 id="repository-visibility-deletion-and-transfer-">Repository visibility, deletion and transfer 🌯&lt;/h4>
&lt;p>Visibility would allow a member to make a repository public, which could result in accidental or at least, unexpected public publishing of internal repositories.&lt;/p>
&lt;p>Deletion and transfer can also be dangerous, as an attacker might attempt to take control of repositories, in exchange for a ransom for example.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/visibility_and_deletion.png" alt="Visibility change and repo deletion and transfer to uncheck!">&lt;/p>
&lt;h4 id="member-team-permissions-">Member team permissions 🌯&lt;/h4>
&lt;p>Disable this to prevent members from creating teams, which should be managed through &lt;a href="github_automation.md">automation&lt;/a>.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/team_creation.png" alt="Team creation permission to uncheck!">&lt;/p>
&lt;h4 id="member-organization-permissions-">Member organization permissions 🍩&lt;/h4>
&lt;p>Enable this to ensure everyone contributing on your repositories has access to security advisories related to dependencies of the code.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/dependency_insight.png" alt="Dependency insight to check ✅!">&lt;/p>
&lt;h2 id="security--analysis-">Security &amp;amp; Analysis 🍩&lt;/h2>
&lt;p>Depending on your GitHub subscription level, and on your repositories being public or private, you will have access to various security and analysis tools.&lt;/p>
&lt;p>I recommend that you simply enable all of them by default.&lt;/p>
&lt;p>&lt;strong>There is no API for configuring these during repository creation, making the configuration of the defaults even more iportant&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/security_analysis.png" alt="Security &amp; Analysis - check&amp;rsquo;em all! ✅✅✅!">&lt;/p>
&lt;h2 id="actions--to-">Actions 🌯 to 🌶&lt;/h2>
&lt;p>GitHub actions lets you build workflows directly in GitHub. It can be used as a full-fledged CI/CD, or for simpler tasks.&lt;/p>
&lt;p>Actions, by definitions, are code that is executed with permission to interact with repositories.&lt;/p>
&lt;p>If you do not use actions: block them all for now.
If you do use actions, and require a high level of security, allow specific actions only.&lt;/p>
&lt;p>If you are in the middle, allow actions that are made by GitHub directly, as well as from &lt;a href="https://github.com/marketplace?type=actions&amp;amp;verification=verified_creator">verified creators&lt;/a>.&lt;/p>
&lt;p>&lt;img src="./images/safer-github-setup/actions.png" alt="No one-size-fits-all for Actions">&lt;/p>
&lt;h2 id="codespaces">Codespaces&lt;/h2>
&lt;p>&lt;a href="https://github.com/features/codespaces">Codespaces&lt;/a> is essentially ML-powered autocomplete for developers. Its name is also real close to the &lt;a href="https://www.csoonline.com/article/2365062/code-spaces-forced-to-close-its-doors-after-security-incident.html">name of a company that closed after getting wrecked by an attack&lt;/a>, but it is completely unrelated.&lt;/p>
&lt;p>It is essentially a development environment in the cloud for your developers, available through a browser or the desktop version of Visual Studio Code.&lt;/p>
&lt;p>If you do not intend on using them, do not allow them, as they are relatively expensive. But keep in mind they exist, especially if you start thinking of ways to allow developers to work in standardized environments without having too much control on their actual computers.&lt;/p>
&lt;h2 id="automating--this">Automating 🌶 this&lt;/h2>
&lt;p>See &lt;a href="github_automation.md">automation&lt;/a>!&lt;/p></description><category domain="https://oops.computer/categories/secure-startup/">Secure Startup</category></item><item><title>Simulating Ransomware with Ransomulator</title><link>https://oops.computer/posts/ransomulator/</link><guid isPermaLink="true">https://oops.computer/posts/ransomulator/</guid><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>guillaume@binaryfactory.ca (Guillaume Ross)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><description>&lt;p>&lt;a href="https://github.com/zeronetworks/BloodHound-Tools/tree/main/Ransomulator">Ransomulator&lt;/a> is a tool for &lt;a href="https://github.com/BloodHoundAD/BloodHound">BloodHound&lt;/a>.&lt;/p>
&lt;p>BloodHound is an open source tool that uses the power of graph databases to help attackers and defenders determine how their Active Directory environments could be compromised. Traditionally used by red teams, it’s a tool that blue teams should leverage extensively.&lt;/p>
&lt;p>As BloodHound gathers information on computers, accounts, sessions and much more, it is an ideal tool to generate a simulated ransomware infection, quickly allowing you to understand how fast a compromised system could lead to all systems being compromised. &lt;a href="https://github.com/zeronetworks/BloodHound-Tools/tree/main/Ransomulator">Ransomulator&lt;/a> helps you do that more easily.&lt;/p>
&lt;p>I&amp;rsquo;ve previously made &lt;a href="pluralsight.pxf.io/XkjDo">training for BloodHound&lt;/a>[^1: Affiliate Link], available on Pluralsight.&lt;/p></description><category domain="https://oops.computer/categories/links/">Links</category></item></channel></rss>